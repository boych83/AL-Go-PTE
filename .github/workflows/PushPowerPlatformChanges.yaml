name: " Push Power Platform changes"

on:
  workflow_dispatch:
    inputs:
      solutionName:
        description: "Name of the Power Platform solution. (* takes the name from Al-go-settings.json)"
        required: true
        default: "*"
      environment:
        description: "Environment"
        required: true

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    shell: powershell

jobs:
  PushChanges:
    runs-on: [windows-latest]
    name: Push changes to ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize the workflow
        id: init
        uses: boych83/AL-Go-Actions/WorkflowInitialize@preview
        with:
          shell: powershell
          eventId: "DO0103"

      - name: EnvName
        id: envName
        shell: powershell
        run: |
          $ErrorActionPreference = "STOP"
          Set-StrictMode -version 2.0
          $envName = '${{ inputs.environment }}'
          Add-Content -Path $env:GITHUB_OUTPUT -Value "envName=$envName"

      - name: Read settings
        uses: boych83/AL-Go-Actions/ReadSettings@preview
        with:
          shell: powershell

      - name: Read secrets
        uses: boych83/AL-Go-Actions/ReadSecrets@preview
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          shell: powershell
          settingsJson: ${{ env.Settings }}
          secrets: "${{ steps.envName.outputs.envName }}-AuthContext,${{ steps.envName.outputs.envName }}_AuthContext,AuthContext,${{ steps.envName.outputs.envName }}-EnvironmentName,${{ steps.envName.outputs.envName }}_EnvironmentName,EnvironmentName,projects"

      - name: read auth context
        id: authContext
        uses: boych83/AL-Go-Actions/ReadAuthContext@preview
        with:
          shell: powershell
          envName: ${{ steps.envName.outputs.envName }}
          environment: ${{ steps.envName.outputs.envName }}

      - name: Set Power Platform solution name
        id: solutionName
        shell: powershell
        env:
          _inputSolutionName: ${{ inputs.solutionName }}
        run: |
          $ErrorActionPreference = "STOP"
          Set-StrictMode -version 2.0
          $solutionName = $env:_inputSolutionName
          if ($solutionName -eq "*") {
            write-host "Solution name is not provided. Taking the name from Al-go-settings.json"
            $solutionName = $env:powerPlatformSolutionFolder
          }
          write-host "Solution name: $solutionName"
          Add-Content -Path $env:GITHUB_ENV -Value "powerPlatformSolutionFolder=$solutionName"

      - name: Parse DeployToSettings and AuthContext
        uses: boych83/AL-Go-Actions/ReadPowerPlatformSettings@preview
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          deploySettings: ${{ env.deployTo }} 
          authSettings: ${{ env.authContext }}

      - name: Build PowerPlatform Solution
        id: BuildPowerPlatform
        uses: boych83/AL-Go-Actions/BuildPowerPlatform@preview
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          solutionFolder: ${{ env.powerPlatformSolutionFolder }}
          outputFolder: .buildartifacts/PowerPlatformSolution/
          outputFileName: tempsolution-PowerPlatformSolution-
          environmentName: ${{ env.environmentName }}
          companyId: ${{ env.companyId }}
      
      - name: Export and push changes to Power Platform
        uses: boych83/AL-Go-Actions/DeployPowerPlatform@preview
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          artifactPath: '.buildartifacts'
          deploySettings: ${{ env.deployTo }} 
          authSettings: ${{ env.authContext }}

      - name: Finalize the workflow
        if: always()
        uses: boych83/AL-Go-Actions/WorkflowPostProcess@preview
        with:
          shell: powershell
          eventId: "DO0103"
          telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
